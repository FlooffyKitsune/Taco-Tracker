import{S as ee,i as te,s as se,n as Q,d as h,r as ae,a as j,b as q,c as o,l as X,e as f,h as re,f as y,g as p,j as k,k as N,m as A,o as T,p as g,t as L}from"../chunks/XUcN7xOl.js";import"../chunks/IHki7fMi.js";function Z(i){let a,e,t,n;return{c(){a=g("div"),e=g("pre"),t=L(i[3]),this.h()},l(s){a=p(s,"DIV",{class:!0});var r=k(a);e=p(r,"PRE",{class:!0});var b=k(e);t=A(b,i[3]),b.forEach(h),r.forEach(h),this.h()},h(){f(e,"class","text-white whitespace-pre-wrap font-mono text-sm"),f(a,"class",n="p-4 rounded-lg "+(i[3].includes("✅")?"bg-green-500/20 border border-green-400/30":"bg-red-500/20 border border-red-400/30"))},m(s,r){q(s,a,r),o(a,e),o(e,t)},p(s,r){r&8&&j(t,s[3]),r&8&&n!==(n="p-4 rounded-lg "+(s[3].includes("✅")?"bg-green-500/20 border border-green-400/30":"bg-red-500/20 border border-red-400/30"))&&f(a,"class",n)},d(s){s&&h(a)}}}function $(i){let a,e,t,n;return{c(){a=g("div"),e=g("pre"),t=L(i[2]),this.h()},l(s){a=p(s,"DIV",{class:!0});var r=k(a);e=p(r,"PRE",{class:!0});var b=k(e);t=A(b,i[2]),b.forEach(h),r.forEach(h),this.h()},h(){f(e,"class","text-white whitespace-pre-wrap font-mono text-sm"),f(a,"class",n="mt-6 p-4 rounded-lg "+(i[2].includes("✅")?"bg-green-500/20 border border-green-400/30":"bg-red-500/20 border border-red-400/30"))},m(s,r){q(s,a,r),o(a,e),o(e,t)},p(s,r){r&4&&j(t,s[2]),r&4&&n!==(n="mt-6 p-4 rounded-lg "+(s[2].includes("✅")?"bg-green-500/20 border border-green-400/30":"bg-red-500/20 border border-red-400/30"))&&f(a,"class",n)},d(s){s&&h(a)}}}function le(i){let a,e,t,n,s="🌮 Database Setup",r,b,V=`First, test your database connection, then seed it with default taco types and achievements.\r
			This only needs to be done once when setting up the application.`,_,l,w,x=i[1]?"🔄 Testing...":"🔍 Test Database Connection",F,O,P,C,I=i[0]?"🔄 Seeding...":"🌱 Seed Database",H,B,M,D,J='<h3 class="font-semibold text-white mb-2">What gets seeded:</h3> <ul class="text-white/80 space-y-1"><li>• 12 different taco types (Carne Asada, Al Pastor, etc.)</li> <li>• 10 achievements to unlock</li> <li>• Database tables for users, sessions, and tracking</li></ul>',R,E,W='<a href="/" class="text-blue-300 hover:text-blue-200 underline">← Back to Taco Tracker</a>',U,Y,c=i[3]&&Z(i),u=i[2]&&$(i);return{c(){a=T(),e=g("div"),t=g("div"),n=g("h1"),n.textContent=s,r=T(),b=g("p"),b.textContent=V,_=T(),l=g("div"),w=g("button"),F=L(x),O=T(),c&&c.c(),P=T(),C=g("button"),H=L(I),B=T(),u&&u.c(),M=T(),D=g("div"),D.innerHTML=J,R=T(),E=g("div"),E.innerHTML=W,this.h()},l(d){re("svelte-hbpkka",document.head).forEach(h),a=y(d),e=p(d,"DIV",{class:!0});var z=k(e);t=p(z,"DIV",{class:!0});var m=k(t);n=p(m,"H1",{class:!0,"data-svelte-h":!0}),N(n)!=="svelte-kyitkc"&&(n.textContent=s),r=y(m),b=p(m,"P",{class:!0,"data-svelte-h":!0}),N(b)!=="svelte-w7fei8"&&(b.textContent=V),_=y(m),l=p(m,"DIV",{class:!0});var S=k(l);w=p(S,"BUTTON",{class:!0});var G=k(w);F=A(G,x),G.forEach(h),O=y(S),c&&c.l(S),P=y(S),C=p(S,"BUTTON",{class:!0});var K=k(C);H=A(K,I),K.forEach(h),S.forEach(h),B=y(m),u&&u.l(m),M=y(m),D=p(m,"DIV",{class:!0,"data-svelte-h":!0}),N(D)!=="svelte-nvi5l9"&&(D.innerHTML=J),R=y(m),E=p(m,"DIV",{class:!0,"data-svelte-h":!0}),N(E)!=="svelte-1qqn0qv"&&(E.innerHTML=W),m.forEach(h),z.forEach(h),this.h()},h(){document.title="🌮 Database Setup - Taco Tracker",f(n,"class","text-3xl font-bold mb-6 text-white"),f(b,"class","text-white/80 mb-6"),w.disabled=i[1],f(w,"class","w-full px-6 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-500 rounded-lg font-medium transition-colors text-white"),C.disabled=i[0],f(C,"class","w-full px-6 py-3 bg-green-600 hover:bg-green-700 disabled:bg-gray-500 rounded-lg font-medium transition-colors text-white"),f(l,"class","space-y-4 mb-6"),f(D,"class","mt-8 p-4 bg-blue-500/20 border border-blue-400/30 rounded-lg"),f(E,"class","mt-6"),f(t,"class","bg-white/10 backdrop-blur-xl rounded-2xl p-8 border border-white/20"),f(e,"class","max-w-2xl mx-auto")},m(d,v){q(d,a,v),q(d,e,v),o(e,t),o(t,n),o(t,r),o(t,b),o(t,_),o(t,l),o(l,w),o(w,F),o(l,O),c&&c.m(l,null),o(l,P),o(l,C),o(C,H),o(t,B),u&&u.m(t,null),o(t,M),o(t,D),o(t,R),o(t,E),U||(Y=[X(w,"click",i[4]),X(C,"click",i[5])],U=!0)},p(d,[v]){v&2&&x!==(x=d[1]?"🔄 Testing...":"🔍 Test Database Connection")&&j(F,x),v&2&&(w.disabled=d[1]),d[3]?c?c.p(d,v):(c=Z(d),c.c(),c.m(l,P)):c&&(c.d(1),c=null),v&1&&I!==(I=d[0]?"🔄 Seeding...":"🌱 Seed Database")&&j(H,I),v&1&&(C.disabled=d[0]),d[2]?u?u.p(d,v):(u=$(d),u.c(),u.m(t,M)):u&&(u.d(1),u=null)},i:Q,o:Q,d(d){d&&(h(a),h(e)),c&&c.d(),u&&u.d(),U=!1,ae(Y)}}}function ne(i,a,e){let t=!1,n=!1,s="",r="";async function b(){e(1,n=!0),e(3,r="");try{const l=await(await fetch("/api/test")).json();l.success?e(3,r=`✅ Database connected successfully!
📊 Current counts:
• ${l.counts.tacoTypes} taco types
• ${l.counts.achievements} achievements
• ${l.counts.users} users`):e(3,r=`❌ Database connection failed:
${l.error}`)}catch(_){e(3,r=`❌ Network Error: ${_}`)}e(1,n=!1)}async function V(){e(0,t=!0),e(2,s="");try{const l=await(await fetch("/api/seed",{method:"POST",headers:{"Content-Type":"application/json"}})).json();l.success?e(2,s=`✅ Database seeded successfully!
📊 ${l.tacoTypesCreated||12} taco types created
🏆 ${l.achievementsCreated||10} achievements created

You're ready to start tracking tacos! 🌮`):e(2,s=`❌ Failed to seed database:
${l.error||"Unknown error"}

Details: ${JSON.stringify(l.details||{},null,2)}`)}catch(_){e(2,s=`❌ Network Error: ${_}

Make sure your dev server is running and try again.`)}e(0,t=!1)}return[t,n,s,r,b,V]}class de extends ee{constructor(a){super(),te(this,a,ne,le,se,{})}}export{de as component};
